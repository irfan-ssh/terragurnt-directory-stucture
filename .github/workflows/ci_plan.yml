name: CI Plan

on:
  push:
    branches:
      - main
      - 'feature/**'
      - '*'
  pull_request:
    branches:
      - main

jobs:
  terragrunt:
    name: "Terraform with Terragrunt"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/irfan-ssh/terragrunt-docker-image:latest # Replace with your actual image

    env:
      TERRAGRUNT_TFPATH: /usr/local/bin/terraform
      tf_working_dir: './terragrunt-code'

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Verify Terraform and Terragrunt Installation
        run: |
          ls -ashl
          tfenv install 1.8.5
          tgenv install 0.60.0
          tfenv use 1.8.5
          tgenv use 0.60.0
          terraform --version
          terragrunt --version
        working-directory: ${{ env.tf_working_dir }}

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run HCL Format
        working-directory: ${{ env.tf_working_dir }}
        run: terragrunt hclfmt

      - name: Init Terragrunt
        working-directory: ${{ env.tf_working_dir }}
        run: terragrunt run-all init --terragrunt-provider-cache --terragrunt-non-interactive

      - name: Plan Terragrunt
        working-directory: ${{ env.tf_working_dir }}
        run: |
          # Create a central directory for collecting outputs
          mkdir -p ./terragrunt-code/plan_output
      
          # Find directories with terragrunt.hcl files to ensure valid Terragrunt directories
          dirs=$(find . -type f -name "terragrunt.hcl" -exec dirname {} \;)
      
          echo "Found directories: $dirs"
      
          # Check if any directories were found
          if [ -z "$dirs" ]; then
            echo "No directories found with terragrunt.hcl files. Exiting..."
            exit 1
          fi
      
          # Run the plan command in each directory and collect the outputs
          for dir in $dirs; do
            echo "Running plan in $dir"
            
            # Use an absolute path for the plan output
            output_path="./terragrunt-code/plan_output/$(basename $dir)_plan.output"
            
            terragrunt plan -no-color -out=$output_path --terragrunt-provider-cache --terragrunt-non-interactive --terragrunt-working-dir $dir
            
            # Optionally, run terraform show and append to a central plan_output file
            terraform show -no-color $output_path >> ./terragrunt-code/plan_output/plan_output
          done
      
          echo "All plan outputs have been collected in ./terragrunt-code/plan_output"
          ls -al ./terragrunt-code/plan_output
      
      